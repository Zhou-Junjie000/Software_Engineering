package com.xlf.modules.attachment.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.xlf.common.Views;
import com.xlf.common.base.IEntityController;
import com.xlf.common.base.IEntityService;
import com.xlf.common.util.FileUtil;
import com.xlf.common.util.ResultUtil;
import com.xlf.common.vo.PageVo;
import com.xlf.common.vo.ResultVo;
import com.xlf.modules.attachment.entity.AttachmentEntity;
import com.xlf.modules.attachment.service.AttachmentService;
import com.xlf.modules.sys.entity.User;
import com.xlf.modules.sys.service.RoleService;

/**
 * 附件
 */
@Controller
@RequestMapping("/attachment")
public class AttachmentController implements IEntityController<AttachmentEntity, String>{
	@Autowired
	private AttachmentService attachmentService;
	@Autowired
	private RoleService roleService;

	@Override
	public IEntityService<AttachmentEntity, String> getEntityService() {
		return attachmentService;
	}
	
	/**
	 * 放行记录列表界面
	 */
	@GetMapping("/list")
	public ModelAndView viewList(String pt,@RequestParam(name="canDelte",required=false)String canDelte){
		boolean delete = true;
		if(canDelte!=null&&canDelte.equals("0")){
			delete=false;
		}
		ModelAndView mav = new ModelAndView(Views.Base.ATTACHMENT_LIST);
	   	Map<String,Object> map = new HashMap<String, Object>();
	   	User user = (User)SecurityUtils.getSubject().getPrincipal();
	   	map.put("pt",pt);
	   	map.put("delete",delete);
	   	map.put("role",roleService.getRole(user.getId()));
	   	mav.addAllObjects(map);
	    return mav;
	}
	
	/**
	 * 放行记录列表界面
	 */
	@GetMapping("/storyList")
	public ModelAndView storyList(String relId,String relTable,@RequestParam(name="canDelte",required=false)String canDelte){
		boolean delete = true;
		if(canDelte!=null&&canDelte.equals("0")){
			delete=false;
		}
		ModelAndView mav = new ModelAndView(Views.Base.ATTACHMENT_STORY_LIST);
	   	Map<String,Object> map = new HashMap<String, Object>();
	   	User user = (User)SecurityUtils.getSubject().getPrincipal();
	   	map.put("relId",relId);
	   	map.put("relTable",relTable);
	   	map.put("delete",delete);
	   	map.put("role",roleService.getRole(user.getId()));
	   	mav.addAllObjects(map);
	    return mav;
	}
	

	@GetMapping("/existFile")
	@ResponseBody
	public ResultVo existFile(@RequestParam(name="path",required=true)String path){
		if(FileUtil.existFile(path)){
			return ResultUtil.success(null);
		}
		return ResultUtil.fail(0, "附件不存在");
	}
	
	@GetMapping("/downloadFile")
	public void downloadFile(HttpServletResponse response,
			@RequestParam(name="path",required=true)String path,
			@RequestParam(name="filename",required=true)String filename){
		FileUtil.downFile(response,path,filename);
    }
	
	
	@Override
	public ResultVo delete(String[] ids) {
		//删除表数据时要先删除文件
		boolean flag = true;//删除文件成功标志
		for(String id:ids){
			AttachmentEntity entity = (AttachmentEntity) IEntityController.super.get(id).getData();
			flag =  FileUtil.deleteFile(entity.getFilepath(), entity.getFilename());
		}
		if(flag){
			ResultVo result=  IEntityController.super.delete(ids);
			if(1==result.getCode()){
				result.setMessage("附件删除成功！");
			}
			else{
				result.setMessage("附件删除失败！");
			}
			
    		return result;
		}
		else{
			return ResultUtil.fail(0, "附件删除失败");
		}
	}

	@GetMapping("/getPtAttachment")
	@ResponseBody
	public ResultVo getPtAttachment(String pt,String filesource) {
		return ResultUtil.success(attachmentService.getAttListByPT(pt,filesource));
	}
}
