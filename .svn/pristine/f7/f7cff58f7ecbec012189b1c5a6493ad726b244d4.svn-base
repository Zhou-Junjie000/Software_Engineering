package com.xlf.modules.sys.controller;

import cn.hutool.core.util.StrUtil;
import cn.hutool.crypto.digest.DigestUtil;
import com.xlf.common.Views;
import com.xlf.common.util.DesUtils;
import com.xlf.common.util.ResultUtil;
import com.xlf.common.vo.ResultVo;
import com.xlf.modules.sys.entity.User;
import com.xlf.modules.sys.service.UserService;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

@Controller
@RequestMapping
public class LoginController{
	@Autowired
	private UserService userService;
	
	@GetMapping("/login")
	public String login(){
		
		return Views.LOGIN;
	}
	
	
	@PostMapping("/login")
	@ResponseBody
	public ResultVo login(@RequestParam String account, 
						@RequestParam(required = false) String password, 
						@RequestParam(name="rememberMe", required=false, defaultValue="false") Boolean rememberMe,
						@RequestParam(name="loginType", required=false, defaultValue="web") String loginType){
		Subject subject = SecurityUtils.getSubject();
		
		try {
			if(StrUtil.isBlank(password)){//代表禅道免密登录
				User user = userService.getByAccount(account);
				if (user == null) {
					return ResultUtil.fail(403, "用户不存在");
				}
				subject.login(new UsernamePasswordToken(account, user.getPassword(), rememberMe));
			}else{
				subject.login(new UsernamePasswordToken(account, DigestUtil.md5Hex(password), rememberMe));
			}
            
        } catch (UnknownAccountException e) {
            return ResultUtil.fail(403, "用户不存在");
        } catch (IncorrectCredentialsException e) {
            return ResultUtil.fail(403, "用户名或密码错误");
        } catch (Exception e) {
            return ResultUtil.fail(403, "系统异常请联系管理员");
        }
		
		return ResultUtil.success();
	}
	
	/**
	 * 
	 * @Description:禅道登录
	 * @param: @param account
	 * @param: @param password
	 * @param: @param rememberMe
	 * @param: @param loginType
	 * @param: @return      
	 * @return: ResultVo      
	 * @throws
	 */
	@PostMapping("/ztlogin")
	@ResponseBody
	public ResultVo ztLogin(@RequestParam String account){
		
		if (StrUtil.isBlank(account)) {
			return ResultUtil.fail(403, "用户名不能为空");
		}
		
		Subject subject = SecurityUtils.getSubject();
		
		try {
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			Date date = new Date();
			String dateKey = "_" + sdf.format(date);
			String key = DesUtils.strDefaultKey + dateKey;//加密key
			account = DesUtils.decrypt(account, key);
			User user = userService.getByAccount(account);
			subject.login(new UsernamePasswordToken(account, user.getPassword()));
            
        } catch (UnknownAccountException e) {
            return ResultUtil.fail(403, "用户不存在");
        } catch (IncorrectCredentialsException e) {
            return ResultUtil.fail(403, "用户名或密码错误");
        } catch (Exception e) {
            return ResultUtil.fail(403, "系统异常请联系管理员");
        }
		
		return ResultUtil.success();
	}
	
    /**
     * 禅道跳转项目登录
     */
    @GetMapping("/ztlogin")
	public ModelAndView zentaoLogin(String loginName,String type){
		String url = Views.Base.ZENTAO_LOGIN;
		System.out.println();
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("loginName", loginName);
		map.put("type", type==null?0:type);
		ModelAndView mav = new ModelAndView(url);
		mav.addAllObjects(map);
		return mav;
	}
}
